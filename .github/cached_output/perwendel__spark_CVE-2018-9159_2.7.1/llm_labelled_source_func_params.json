[
  {
    "package": "spark",
    "class": "Request",
    "method": "params",
    "signature": "String params(String param)",
    "tainted_input": [
      "param"
    ]
  },
  {
    "package": "spark",
    "class": "Request",
    "method": "cookie",
    "signature": "String cookie(String name)",
    "tainted_input": [
      "name"
    ]
  },
  {
    "package": "spark",
    "class": "Request",
    "method": "headers",
    "signature": "String headers(String header)",
    "tainted_input": [
      "header"
    ]
  },
  {
    "package": "spark",
    "class": "Request",
    "method": "queryMap",
    "signature": "QueryParamsMap queryMap(String key)",
    "tainted_input": [
      "key"
    ]
  },
  {
    "package": "spark",
    "class": "Request",
    "method": "queryParams",
    "signature": "String queryParams(String queryParam)",
    "tainted_input": [
      "queryParam"
    ]
  },
  {
    "package": "spark",
    "class": "Request",
    "method": "queryParamsValues",
    "signature": "String[] queryParamsValues(String queryParam)",
    "tainted_input": [
      "queryParam"
    ]
  },
  {
    "package": "spark",
    "class": "Request",
    "method": "queryParamOrDefault",
    "signature": "String queryParamOrDefault(String queryParam, String defaultValue)",
    "tainted_input": [
      "queryParam"
    ]
  },
  {
    "package": "spark",
    "class": "Redirect",
    "method": "delete",
    "signature": "void delete(String fromPath, String toPath)",
    "tainted_input": [
      "fromPath",
      "toPath"
    ]
  },
  {
    "package": "spark",
    "class": "Redirect",
    "method": "any",
    "signature": "void any(String fromPath, String toPath)",
    "tainted_input": [
      "fromPath",
      "toPath"
    ]
  },
  {
    "package": "spark",
    "class": "Redirect",
    "method": "post",
    "signature": "void post(String fromPath, String toPath)",
    "tainted_input": [
      "fromPath",
      "toPath"
    ]
  },
  {
    "package": "spark",
    "class": "Routable",
    "method": "get",
    "signature": "void get(String path, Route route)",
    "tainted_input": [
      "path"
    ]
  },
  {
    "package": "spark",
    "class": "Spark",
    "method": "get",
    "signature": "void get(String path, String acceptType, Route route)",
    "tainted_input": [
      "path",
      "acceptType"
    ]
  },
  {
    "package": "spark",
    "class": "Spark",
    "method": "put",
    "signature": "void put(String path, Route route)",
    "tainted_input": [
      "path"
    ]
  },
  {
    "package": "spark",
    "class": "Spark",
    "method": "delete",
    "signature": "void delete(String path, Route route)",
    "tainted_input": [
      "path"
    ]
  },
  {
    "package": "spark",
    "class": "Spark",
    "method": "after",
    "signature": "void after(String path, Filter filter)",
    "tainted_input": [
      "path"
    ]
  },
  {
    "package": "spark",
    "class": "Spark",
    "method": "before",
    "signature": "void before(String path, Filter filter)",
    "tainted_input": [
      "path"
    ]
  },
  {
    "package": "spark",
    "class": "Spark",
    "method": "path",
    "signature": "void path(String path, RouteGroup routeGroup)",
    "tainted_input": [
      "path"
    ]
  },
  {
    "package": "spark",
    "class": "Spark",
    "method": "post",
    "signature": "void post(String path, Route route)",
    "tainted_input": [
      "path"
    ]
  },
  {
    "package": "spark",
    "class": "Spark",
    "method": "patch",
    "signature": "void patch(String path, Route route)",
    "tainted_input": [
      "path"
    ]
  },
  {
    "package": "spark",
    "class": "Spark",
    "method": "webSocket",
    "signature": "void webSocket(String path, Class<?> handler)",
    "tainted_input": [
      "path"
    ]
  }
]
