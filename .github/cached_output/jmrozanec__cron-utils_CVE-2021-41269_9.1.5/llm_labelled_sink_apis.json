[
  {
    "package": "java.util.regex",
    "class": "Pattern",
    "method": "compile",
    "signature": "Pattern compile(String p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "filter",
    "signature": "Stream<Cron> filter(Predicate<? super Cron> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "collect",
    "signature": "R collect(Collector<? super String,A,R> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "map",
    "signature": "Stream<R> map(Function<? super Cron,? extends R> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "filter",
    "signature": "Stream<Optional<ZonedDateTime>> filter(Predicate<? super Optional<ZonedDateTime>> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "map",
    "signature": "Stream<R> map(Function<? super ExecutionTime,? extends R> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "filter",
    "signature": "Stream<Boolean> filter(Predicate<? super Boolean> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "collect",
    "signature": "R collect(Collector<? super ExecutionTime,A,R> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "collect",
    "signature": "R collect(Collector<? super Integer,A,R> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "filter",
    "signature": "Stream<Integer> filter(Predicate<? super Integer> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "anyMatch",
    "signature": "boolean anyMatch(Predicate<? super Integer> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "max",
    "signature": "Optional<Integer> max(Comparator<? super Integer> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "map",
    "signature": "Stream<R> map(Function<? super Integer,? extends R> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "IntStream",
    "method": "forEach",
    "signature": "void forEach(IntConsumer p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "collect",
    "signature": "R collect(Collector<? super CronParserField,A,R> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "sorted",
    "signature": "Stream<CronParserField> sorted(Comparator<? super CronParserField> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "map",
    "signature": "Stream<R> map(Function<? super FieldDefinition,? extends R> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "collect",
    "signature": "R collect(Collector<? super Cron,A,R> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "map",
    "signature": "Stream<R> map(Function<? super String,? extends R> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "mapToInt",
    "signature": "IntStream mapToInt(ToIntFunction<? super String> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "filter",
    "signature": "Stream<String> filter(Predicate<? super String> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.regex",
    "class": "Pattern",
    "method": "compile",
    "signature": "Pattern compile(String p0, int p1)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "javax.validation",
    "class": "ConstraintValidatorContext",
    "method": "buildConstraintViolationWithTemplate",
    "signature": "ConstraintViolationBuilder buildConstraintViolationWithTemplate(String p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "map",
    "signature": "Stream<R> map(Function<? super ZonedDateTime,? extends R> p0)",
    "sink_args": [
      "p0"
    ],
    "type": "sink"
  },
  {
    "package": "java.io",
    "class": "ObjectInputStream",
    "method": "readObject",
    "signature": "Object readObject()",
    "sink_args": [
      "this"
    ],
    "type": "sink"
  }
]